---
title: "Loading_cleaned_data"
format: html
docx:
  toc: TRUE
editor: visual
warning: FALSE
embed-resources: true
---

## Setup

Load necessary libraries:

```{r}
library(tidyverse)
library(janitor)
library(hrbrthemes)
library(GGally)
library(tabulator)
library(readxl)
library(broom)
library(plm)
library(openxlsx)
library(sandwich)
library(lmtest)
library(stargazer)
library(gt)
library(patchwork)
library(estimatr)
library(tidymodels)
library(factoextra)
library(cluster)
library(gtsummary)
```

## Load Cleaned Data

```{r}

library(readxl)
Fully_combined_dataset <- read_excel("Fully_combined_dataset.xlsx")


#class("net_patient_revenue")
#class("net_charity_care_cost")

numeric_data <- Fully_combined_dataset %>%
  transform(net_patient_revenue = as.numeric(net_patient_revenue)) %>%
  transform(net_charity_care_cost = as.numeric(net_charity_care_cost)) %>%
  mutate(net_patient_revenue_hundred_thousand = net_patient_revenue/100000) %>%
  mutate(net_charity_care_cost_hundred_thousand = net_charity_care_cost/100000) %>%
  mutate(year = as.factor(year)) %>%
  mutate(medicaid_payer_mix_numeric = as.numeric(medicaid_payer_mix)) %>%
  mutate(direct_patient_care_labor_hours_numeric = as.numeric(direct_patient_care_labor_hours)) %>%
  filter(!hospital_ownership_type == "For-Profit") %>%
  mutate(percent_children_in_poverty = percent_children_in_poverty/100) %>%
  mutate(percent_unemployed = percent_unemployed/100) %>%
  mutate(percent_smokers = percent_smokers/100) %>%
  mutate(percent_excessive_drinking = percent_excessive_drinking/100) %>%
  mutate(percent_obese = percent_obese/100) %>%
  mutate(percent_uninsured = percent_uninsured/100) %>%
  mutate(percent_female = percent_female/100) %>%
  mutate(percent_65_and_over = percent_65_and_over/100) %>%
  mutate(percent_not_proficient_in_english = percent_not_proficient_in_english/100) %>%
  mutate(percent_hispanic = percent_hispanic/100) %>%
  mutate(percent_african_american = percent_african_american/100) %>%
  mutate(percent_rural = percent_rural/100) %>%
  mutate(hospital_operating_labor_cost_hundred_thousand = hospital_operating_labor_cost/100000)
  
`Non-Profit` <- if_else(numeric_data$hospital_ownership_type == 'Non-Profit', 1, 0)

Governmental <- if_else(numeric_data$hospital_ownership_type == 'Governmental', 1, 0)

numeric_data <- tibble(numeric_data,
                       `Non-Profit`,
                       Governmental)
```

Create dataset with different variable classes and rescaled for certain variables. Dropped for-profit hospitals. 

## Visualize dependant/independant relationship by year

```{r}
numeric_data %>%
  ggplot(mapping = aes(y = difference_in_discharges,
                       x = hospital_ownership_type)) +
  geom_point() + 
  facet_wrap(vars(year))
```



## Understanding data missingness

```{r}
#control variables 
sum(is.na(numeric_data$bed_size))
mean(is.na(numeric_data$bed_size))

sum(is.na(numeric_data$net_charity_care_cost_ten_thousand))
mean(is.na(numeric_data$net_charity_care_cost_ten_thousand))

sum(is.na(numeric_data$net_patient_revenue_hundred_thousand))
mean(is.na(numeric_data$net_patient_revenue_hundred_thousand))

sum(is.na(numeric_data$medicaid_payer_mix_numeric))
mean(is.na(numeric_data$medicaid_payer_mix_numeric))

sum(is.na(numeric_data$medicare_payer_mix))
mean(is.na(numeric_data$medicare_payer_mix))

sum(is.na(numeric_data$inpatient_occupancy))
mean(is.na(numeric_data$inpatient_occupancy))

sum(is.na(numeric_data$direct_patient_care_labor_hours_numeric))
mean(is.na(numeric_data$direct_patient_care_labor_hours_numeric))

sum(is.na(numeric_data$direct_patient_care_labor_cost))
mean(is.na(numeric_data$direct_patient_care_labor_cost))

#key dependent variable
sum(is.na(numeric_data$difference_in_discharges))
mean(is.na(numeric_data$difference_in_discharges))

#key independent variable.
sum(is.na(numeric_data$hospital_ownership_type))
mean(is.na(numeric_data$hospital_ownership_type))


#Look at a table with just the variables I am interested in.
View(numeric_data %>% group_by(hospital_name.y) %>% 
       select(year, 
              bed_size, 
              net_charity_care_cost_ten_thousand,
                       net_patient_revenue_hundred_thousand,
              difference_in_discharges,
              hospital_ownership_type, 
              hospital_name.y, 
              medicaid_payer_mix_numeric,
              medicare_payer_mix,
              inpatient_occupancy,
              direct_patient_care_labor_hours_numeric,
              direct_patient_care_labor_cost))

# try using across function 




```

Percent of missing observations.
-Difference in Discharges is .4259 or 895 obs.
-Hospital Ownership Type is .0048 or 10 obs. 
-Bed size is .0148 or 31 observations.
-Net Charity Care Cost is .0548 or 115 obs.
-Net Patient Revenue is .0157 or 33 obs.
-Medicaid Payer Mix is .0615 or 129 obs. 
-Medicare Payer Mix is .0143 or 30 obs. 
-Inpatient Occupancy is .0248 or 52 obs. 
-Direct Patient Care Labor Hours is .1286 or 270 obs. 
-Direct Patient Care Labor Cost is .1272 or 267 obs. 



## Creating new data frame only on what I'm evaluating
```{r}
knn_numerics <- numeric_data %>% select(net_patient_revenue_hundred_thousand,
                                            bed_size,
                                            net_charity_care_cost_hundred_thousand,
                                            difference_in_discharges, 
                                            hospital_ownership_type,
                                            inpatient_occupancy, 
                                            operating_expenses,
                                            fund_balance,
                                            medicare_payer_mix,
                                            hospital_expenses_inclusive_of_all_services,
                                        capital_related_costs_as_of_hospital_expenses_inclusive_of_all_services,
                                            overhead_labor_cost,
                                            medicare_operating_profit_margin,
                                            payer_mix_adjusted_profit_loss_medicare,
                                            commercial_hospital_operating_profit_loss,
                                            direct_patient_care_labor_cost,
                                            hospital_operating_labor_cost_hundred_thousand,
                                        medicaid_payer_mix_numeric,
              direct_patient_care_labor_hours_numeric,
              percent_children_in_poverty,
              percent_unemployed,
              percent_smokers,
              percent_excessive_drinking,
              percent_obese,
              percent_uninsured,
              percent_female,
              percent_65_and_over,
              percent_not_proficient_in_english,
              percent_hispanic,
              percent_african_american,
              household_income,
              mentally_unhealthy_days,
              population_y,
              percent_rural,
              `Non-Profit`) %>% 
  na.omit()
```


## Using Grid Search 
```{r}

set.seed(04092026)

data_split <- initial_split(data = knn_numerics,
                            prop = .80)

data_train <- training(x = data_split)
data_test <- testing(x = data_split)


k_recipe <- recipe(formula = difference_in_discharges ~ .,
                   data = data_train) %>%
  step_normalize(net_patient_revenue_hundred_thousand,
                 net_charity_care_cost_hundred_thousand,
                 operating_expenses,
                 fund_balance,
                 hospital_expenses_inclusive_of_all_services,
                 capital_related_costs_as_of_hospital_expenses_inclusive_of_all_services,
                 overhead_labor_cost,
                 commercial_hospital_operating_profit_loss,
                 direct_patient_care_labor_cost,
                 hospital_operating_labor_cost_hundred_thousand,
                 direct_patient_care_labor_hours_numeric,
                 household_income,
                 population_y)

k_folds <- vfold_cv(data = data_train,
                    v = 10)

k_mod <- nearest_neighbor(neighbors = tune()) %>%
  set_engine(engine = "kknn") %>%
  set_mode(mode = "regression")

k_workflow <- workflow() %>%
  add_model(spec = k_mod) %>%
  add_recipe(recipe = k_recipe)

k_grid <- grid_regular(neighbors(range = c(1, 41)),
                       levels = 21)

#k_grid
  
k_res <- k_workflow %>%
  tune_grid(resamples = k_folds,
            grid = k_grid,
            control = control_grid(save_pred = TRUE),
            metrics = metric_set(rmse))

collected_metrics <- k_res %>%
  collect_metrics()

knn_show_best <- k_res %>%
  show_best()

k_res %>%
  select_best()

k_res %>%
  collect_predictions()

k_graph_stderr <- collected_metrics %>%
  ggplot(mapping = aes(x = neighbors,
                       y = std_err)) + 
  geom_line() +
  geom_point() +
    geom_vline(xintercept = 9, 
             linetype = 2) +
  labs(title = "Evaluating KNN Based on Standard Error") +
  xlab("Number of Neighbors") +
  ylab("Standard Error") +
  theme_minimal()

k_graph_mean <- collected_metrics %>%
  ggplot(mapping = aes(x = neighbors,
                       y = mean)) + 
  geom_line() +
  geom_point() +
  geom_vline(xintercept = 5, 
             linetype = 2) +
  labs(title = "Evaluating KNN based on Mean") +
  xlab("Number of Neighbors") +
  ylab("Mean") +
    theme_minimal()

k_graph_stderr + k_graph_mean

gt_knn_show_best <- knn_show_best %>%
  select(!.config) %>% 
  mutate(KNN = neighbors) %>%
  mutate(Metric = .metric) %>%
  mutate(Estimator = .estimator) %>%
  mutate(Number = n) %>%
  mutate(`Standard Error` = std_err) %>% 
  mutate(Mean = mean) %>%
  select(-std_err, -n, -.estimator, -.metric, -neighbors, -mean) %>%
  gt() %>%
  tab_header(title = "Best KNN Predictions",
             subtitle = "Based on Grid Search") %>%
  tab_spanner(label = "Measures",
              columns = c("Standard Error",
                          "Mean"))
  

```

Sqrt of 1311 is about 36.21 for sqrt rule.

## Data Imputation

```{r}
numeric_data$hospital_ownership_type <- as.factor(numeric_data$hospital_ownership_type)

numeric_tr2 <- numeric_data
numeric_te2 <- numeric_data
numeric_te_whole2 <- numeric_te2

rec2 <- numeric_te2 %>% recipe(difference_in_discharges ~ hospital_ownership_type + 
                                 bed_size + 
                                 net_patient_revenue_hundred_thousand +
                                            net_charity_care_cost_hundred_thousand +
                                            difference_in_discharges + 
                                            inpatient_occupancy + 
                                            operating_expenses +
                                            fund_balance +
                                            medicare_payer_mix +
                                            hospital_expenses_inclusive_of_all_services +                                        capital_related_costs_as_of_hospital_expenses_inclusive_of_all_services +
                                            overhead_labor_cost +
                                            medicare_operating_profit_margin +
                                            payer_mix_adjusted_profit_loss_medicare +
                                            commercial_hospital_operating_profit_loss +
                                            direct_patient_care_labor_cost +
                                            hospital_operating_labor_cost_hundred_thousand +
                                        medicaid_payer_mix_numeric +
              direct_patient_care_labor_hours_numeric +
              percent_children_in_poverty +
              percent_unemployed +
              percent_smokers +
              percent_excessive_drinking +
              percent_obese +
              percent_uninsured +
              percent_female +
              percent_65_and_over +
              percent_not_proficient_in_english+
              percent_hispanic +
              percent_african_american +
              household_income +
              mentally_unhealthy_days +
              population_y +
              percent_rural +
              `Non-Profit`)

norm_trans <- rec2 %>%
  step_normalize(net_patient_revenue_hundred_thousand,
                 net_charity_care_cost_hundred_thousand,
                 operating_expenses,
                 fund_balance,
                 hospital_expenses_inclusive_of_all_services,
                 capital_related_costs_as_of_hospital_expenses_inclusive_of_all_services,
                 overhead_labor_cost,
                 commercial_hospital_operating_profit_loss,
                 direct_patient_care_labor_cost,
                 hospital_operating_labor_cost_hundred_thousand,
                 direct_patient_care_labor_hours_numeric,
                 household_income,
                 population_y)

ratio_recipe3 <- norm_trans %>%
  step_impute_knn(all_predictors(),
                  neighbors = 5)

ratio_rec4 <- prep(ratio_recipe3, training = numeric_tr2) 

imputed2 <- bake(ratio_rec4,
                numeric_te2)

summary(imputed2$difference_in_discharges)
summary(imputed2)
#Most missing values reduced to 24 with the exception of net patient revenue which
#reduced to 33

name_change <- imputed2 %>% 
  mutate(difference_in_discharges_imputed = difference_in_discharges) %>%
  mutate(hospital_ownership_type_imputed = hospital_ownership_type) %>%
  mutate(bed_size_imputed = bed_size) %>%
  mutate(difference_in_discharges_imputed = difference_in_discharges) %>% mutate(net_charity_care_cost_hundred_thousand_imputed = net_charity_care_cost_hundred_thousand) %>% mutate(net_patient_revenue_hundred_thousand_imputed = net_patient_revenue_hundred_thousand) %>%
  mutate(medicaid_payer_mix_numeric_imputed = medicaid_payer_mix_numeric) %>%
  mutate(medicare_payer_mix_imputed = medicare_payer_mix) %>%
  mutate(inpatient_occupancy_imputed = inpatient_occupancy) %>% 
    mutate(direct_patient_care_labor_hours_numeric_imputed = direct_patient_care_labor_hours_numeric) %>%
  mutate(direct_patient_care_labor_cost_imputed = direct_patient_care_labor_cost) %>%
  mutate(percent_children_in_poverty_imputed = percent_children_in_poverty) %>%
  mutate(percent_unemployed_imputed = percent_unemployed) %>%
  mutate(percent_smokers_imputed = percent_smokers) %>%
  mutate(percent_excessive_drinking_imputed = percent_excessive_drinking) %>%
  mutate(percent_obese_imputed = percent_obese) %>%
  mutate(percent_uninsured_imputed = percent_uninsured) %>% 
  mutate(percent_female_imputed = percent_female) %>%
  mutate(percent_65_and_over_imputed = percent_65_and_over) %>%
  mutate(percent_not_proficient_in_english_imputed = percent_not_proficient_in_english) %>%
  mutate(percent_hispanic_imputed = percent_hispanic) %>%
  mutate(percent_african_american_imputed = percent_african_american) %>%
  mutate(household_income_imputed = household_income) %>%
  mutate(mentally_unhealthy_days_imputed = mentally_unhealthy_days) %>%
  mutate(population_y_imputed = population_y) %>%
  mutate(percent_rural_imputed = percent_rural) %>%
  mutate(`Non-Profit_imputed` = `Non-Profit`) %>%
  select(ends_with("imputed"))

full_imputed2 <- cbind(numeric_data,
                      name_change)

summary(full_imputed2)
class(full_imputed2)
View(glance(full_imputed2))

removed_omits <- full_imputed2 %>%
  select(bed_size_imputed,
                   difference_in_discharges_imputed,
                   net_charity_care_cost_hundred_thousand_imputed,
                   net_patient_revenue_hundred_thousand_imputed,
                   hospital_ownership_type_imputed,
         year,
         hospital_name.y,
         medicaid_payer_mix_numeric_imputed,
         medicare_payer_mix_imputed,
         inpatient_occupancy_imputed,
              direct_patient_care_labor_hours_numeric_imputed,
              direct_patient_care_labor_cost_imputed,
         percent_children_in_poverty_imputed,
         percent_unemployed_imputed,
         percent_smokers_imputed,
         percent_excessive_drinking_imputed,
         percent_obese_imputed,
         percent_uninsured_imputed,
         percent_female_imputed,
         percent_65_and_over_imputed,
         percent_not_proficient_in_english_imputed,
         percent_hispanic_imputed,
         percent_african_american_imputed,
         household_income_imputed,
         mentally_unhealthy_days_imputed,
         population_y_imputed,
         percent_rural_imputed,
         `Non-Profit_imputed`) %>% 
  na.omit()

curious <- removed_omits %>% summarize(mean(difference_in_discharges_imputed))
#Mean is -1.171

curious2 <- knn_numerics %>%
  summarize(mean(difference_in_discharges))
#Mean is -2.205

#sum(is.nan(full_imputed2$difference_in_discharges_imputed))


#full_imputed2 %>% count(is.na(hospital_name.y))

#full_imputed2 %>% count(is.na(hospital_ownership_type))  

#full_imputed2 %>% count(is.na(year))

imp_graph <- removed_omits %>%
  ggplot(mapping = aes(y = difference_in_discharges_imputed,
                       x = hospital_ownership_type_imputed)) +
  geom_point(alpha = 0.4, shape = 16, color = "skyblue") + 
  theme_minimal() + labs(title = "Graph using imputed data",
                         y = "Difference in Discharges Imputed",
                         x = "Hospital Ownership Type")

ori_graph <- numeric_data %>%
  ggplot(mapping = aes(y = difference_in_discharges,
                       x = hospital_ownership_type)) +
  geom_point(alpha = 0.4, shape = 16, color = "red3") + 
  theme_minimal() + labs(title = "Graph using initial data",
                         y = "Difference in Discharges",
                         x = "Hospital Ownership Type")

imp_graph + ori_graph

imp_graph_2 <- removed_omits %>%
  ggplot(mapping = aes(y = difference_in_discharges_imputed,
                       x = bed_size_imputed)) +
  geom_point(alpha = 0.4, shape = 16, color = "skyblue") + 
  theme_minimal() + labs(title = "Graph using imputed data",
                         y = "Observed vs. Expected PPCs Imputed",
                         x = "Number of Beds Imputed")

ori_graph_2 <- numeric_data %>%
  ggplot(mapping = aes(y = difference_in_discharges,
                       x = bed_size)) +
  geom_point(alpha = 0.4, shape = 16, color = "red3") + 
  theme_minimal() + labs(title = "Graph using initial data",
                         y = "Observed vs. Expected PPCs",
                         x = "Number of Beds")

imp_graph_2 + ori_graph_2

```

Ideally would do all numeric predictors but that was taking forever. 

medicaid_payer_mix is classified as a factor as is adjusted patient discharges and direct patient care fte per 1000 adjusted discharges.


## F-tests between certain variables
```{r}

var.test(removed_omits$bed_size_imputed, 
          removed_omits$inpatient_occupancy_imputed, 
          alternative = "two.sided")
#p value is 2.2e-16. As the p-value is less than .05 we reject the null hypothesis that the populations are equal. 

var.test(removed_omits$net_charity_care_cost_ten_thousand_imputed,
         removed_omits$medicaid_payer_mix_numeric_imputed)
#p value is 2.2e-16 also. As the p-value is less than .05 we reject the null hypothesis that the populations are equal. 
var.test(removed_omits$bed_size_imputed,
         removed_omits$direct_patient_care_labor_hours_numeric_imputed)
#p value is 2.2e-16 also. As the p-value is less than .05 we reject the null hypothesis that the populations are equal. 
var.test(removed_omits$direct_patient_care_labor_hours_numeric_imputed,
         removed_omits$inpatient_occupancy_imputed)
#p value is 2.2e-16 also. As the p-value is less than .05 we reject the null hypothesis that the populations are equal. 
var.test(removed_omits$direct_patient_care_labor_hours_numeric_imputed,
         removed_omits$direct_patient_care_labor_cost_imputed)
#p value is .989. As the p-value is more than .05 we do not reject the null hypothesis that the populations are equal. 

```
Consider looking at Bartlett.test for bed/occupancy/labor variances. 


## GT Table for Numeric Data
```{r}
num_for_gt <- removed_omits %>% select(net_patient_revenue_hundred_thousand_imputed,
                                            bed_size_imputed,
                                            net_charity_care_cost_hundred_thousand_imputed,
                                            difference_in_discharges_imputed, 
                                            hospital_ownership_type_imputed,
                                            inpatient_occupancy_imputed, 
                                            medicare_payer_mix_imputed,
                                            medicaid_payer_mix_numeric_imputed,
              direct_patient_care_labor_hours_numeric_imputed,
              percent_children_in_poverty_imputed,
              percent_unemployed_imputed,
              percent_smokers_imputed,
              percent_excessive_drinking_imputed,
              percent_obese_imputed,
              percent_uninsured_imputed,
              percent_female_imputed,
              percent_65_and_over_imputed,
              percent_not_proficient_in_english_imputed,
              percent_hispanic_imputed,
              percent_african_american_imputed,
              household_income_imputed,
              mentally_unhealthy_days_imputed,
              population_y_imputed,
              percent_rural_imputed,
              `Non-Profit`) %>%
  na.omit()

data_for_gt <- num_for_gt %>% summarise(across(c(net_patient_revenue_hundred_thousand:percent_rural),
                                list(min = min, max = max, var = var, mean = mean, median = median, sd = sd),
                                .names = "{.col}.{.fn}"))

transposed <- t(data_for_gt)




desc_stats <- num_for_gt %>%
  tbl_summary(statistic = all_continuous() ~ "Min: {min} - Max: ({max}) -
              Var: {var} - Mean: ({mean}) - Median: {median} - Sd: ({sd})"
              ,
digits = all_continuous() ~ 2,
label = list(net_patient_revenue_hundred_thousand_imputed ~ "Net Patient Revenue in Hundreds of Thousands of Dollars",
             bed_size_imputed ~ "Number of Hospital Beds",
net_charity_care_cost_hundred_thousand_imputed ~ "Net Charity Care Costs in Hundreds of Thousands of Dollars",
difference_in_discharges_imputed ~ "Expected vs. Observed PPCs",
hospital_ownership_type_imputed ~ "Imputed Hospital Ownership Type",
inpatient_occupancy_imputed ~ "Percent of Occupied Hospital Beds",
medicare_payer_mix_imputed ~ "Medicare Payer Mix",
medicaid_payer_mix_numeric_imputed ~ "Medicaid Payer Mix",
direct_patient_care_labor_hours_numeric_imputed ~ "Direct Patient Care Hours",
percent_children_in_poverty_imputed ~ "Percent of Children in Poverty in the County",
percent_unemployed_imputed ~ "Percent of Unemployed in the County",
percent_smokers_imputed ~ "Percent of Smokers in the County",
percent_excessive_drinking_imputed ~ "Percent of Excessive Drinkers in the County",
percent_obese_imputed ~ "Percent of Obesity in the County",
percent_uninsured_imputed ~ "Percent Uninsured in the County",
percent_female_imputed ~ "Percent Women in the County",
percent_65_and_over_imputed ~ "Percent of Population over 65 in the County",
percent_not_proficient_in_english_imputed ~ "Percent non-English Speakers in the County",
percent_hispanic_imputed ~ "Percent of Population that is Hispanic",
percent_african_american_imputed ~ "Percent of Population that is African American",
household_income_imputed ~ "Average Household Income by County",
mentally_unhealthy_days_imputed ~ "Mentally Unhealthy Days",
population_y_imputed ~ "Total County Population",
percent_rural_imputed ~ "Percent of County Considered Rural",
`Non-Profit` ~ "Dummy Variable between Non-Profit and Government Hospitals")) %>%
  add_n() %>%
  modify_header(label ~ "**Variable**",
                stat_0 ~ "**Statistics**") %>%
  modify_spanning_header(~ "**Descriptive Statistics**") %>%
  as_gt() %>% gt::gtsave("Descriptive_Stats99.png")



show_header_names(desc_stats)








large_gt <- data_for_gt %>%
  gt()
  
  
  
  gt() %>%
  tab_spanner(label = "Percentages",
              columns = c("inpatient_occupancy", "medicare_payer_mix",
                          "capital_related_costs_as_of_hospital_expenses_inclusive_of_all_services",
                          "medicare_operating_profit_margin", "payer_mix_adjusted_profit_loss_medicare",
                          "medicaid_payer_mix_numeric"))
```

## Imputed Regression Results

```{r}
test <- lm(difference_in_discharges_imputed ~ removed_omits$`Non-Profit_imputed`, data = removed_omits)

summary(test)
testglance <- glance(test)
#now 2066

test2 <- lm(difference_in_discharges_imputed ~ removed_omits$`Non-Profit_imputed` + bed_size_imputed + net_patient_revenue_hundred_thousand_imputed + net_charity_care_cost_hundred_thousand_imputed + medicare_payer_mix_imputed + medicaid_payer_mix_numeric_imputed + inpatient_occupancy_imputed + direct_patient_care_labor_hours_numeric_imputed,
            data = removed_omits)  

summary(test2)
tidy(test2)
testglance2 <- glance(test2)
# 2066 obs.

test3 <- lm(difference_in_discharges_imputed ~ removed_omits$`Non-Profit_imputed` + bed_size_imputed + net_patient_revenue_hundred_thousand_imputed + net_charity_care_cost_hundred_thousand_imputed + medicare_payer_mix_imputed + medicaid_payer_mix_numeric_imputed + inpatient_occupancy_imputed + direct_patient_care_labor_hours_numeric_imputed + percent_children_in_poverty_imputed +
              percent_unemployed_imputed +
              percent_smokers_imputed +
              percent_excessive_drinking_imputed +
              percent_obese_imputed +
              percent_uninsured_imputed +
              percent_female_imputed +
              percent_65_and_over_imputed +
              percent_not_proficient_in_english_imputed +
              percent_hispanic_imputed +
              percent_african_american_imputed +
              household_income_imputed +
              mentally_unhealthy_days_imputed +
              population_y_imputed +
              percent_rural_imputed,
            data = removed_omits)

summary(test3)
tidy(test3)
testglance3 <- glance(test3)

test4 <- plm(difference_in_discharges_imputed ~ removed_omits$`Non-Profit_imputed` + hospital_name.y + bed_size_imputed + net_patient_revenue_hundred_thousand_imputed + net_charity_care_cost_hundred_thousand_imputed + medicare_payer_mix_imputed + medicaid_payer_mix_numeric_imputed + inpatient_occupancy_imputed + direct_patient_care_labor_hours_numeric_imputed +
              percent_children_in_poverty_imputed +
              percent_unemployed_imputed +
              percent_smokers_imputed +
              percent_excessive_drinking_imputed +
              percent_obese_imputed +
              percent_uninsured_imputed +
              percent_female_imputed +
              percent_65_and_over_imputed +
              percent_not_proficient_in_english_imputed +
              percent_hispanic_imputed +
              percent_african_american_imputed +
              household_income_imputed +
              mentally_unhealthy_days_imputed +
              population_y_imputed +
              percent_rural_imputed,
    data = removed_omits,
    index = c("hospital_name.y", "year"),
    model = "within",
    effect = "individual")

summary(test4)
tidy(test4)
fixef(test4)
testglance4 <- glance(test4)
# 2066 obs.

test5 <- plm(difference_in_discharges_imputed ~ removed_omits$`Non-Profit_imputed` + year + hospital_name.y + bed_size_imputed + net_patient_revenue_hundred_thousand_imputed + net_charity_care_cost_hundred_thousand_imputed + medicare_payer_mix_imputed + medicaid_payer_mix_numeric_imputed + inpatient_occupancy_imputed +
              direct_patient_care_labor_hours_numeric_imputed+
              percent_children_in_poverty_imputed +
              percent_unemployed_imputed +
              percent_smokers_imputed +
              percent_excessive_drinking_imputed +
              percent_obese_imputed +
              percent_uninsured_imputed +
              percent_female_imputed +
              percent_65_and_over_imputed +
              percent_not_proficient_in_english_imputed +
              percent_hispanic_imputed +
              percent_african_american_imputed +
              household_income_imputed +
              mentally_unhealthy_days_imputed +
              population_y_imputed +
              percent_rural_imputed,
              data = removed_omits,
    index = c("hospital_name.y", "year"),
    model = "within",
    effect = "twoways")

summary(test5)
fixef(test5)
testglance5 <- glance(test5)
# 2066 obs.
```

## Stargazer Results for Imputed Values 

```{r}
Complete_imputed_table <- stargazer(test,
          test2, 
          test3, 
          test4,
          test5,
          type = "html",
          title = "KNN Imputed Regression Models", 
                                               report = "vcs*",
                                               single.row = TRUE,
                                               digits = 3,
                                               covariate.labels = c("Non-Profit Hospitals with Reference Government Hospitals", "Number of Beds",
                                                                    "Net Patient Revenue (Hundreds of Thousands of Dollars)",
                                                                    "Net Charity Care Costs (Hundreds of Thousands of Dollars)",
                                                                    "Medicare Payer Mix",
                                                                    "Medicaid Payer Mix", 
                                                                    "Percent of Beds Occupied",
                                                                    "Total Number of Direct Care Hours per Hospital",
                                                                    "Percent of Children in Poverty",
                                                                    "Percent Unemployed",
                                                                    "Percent Smokers",
                                                                    "Percent Excessive Drinkers",
                                                                    
                                                                    "Percent Obese",
                                                                    "Percent Uninsured",
                                                                    "Percent Female",
                                                                    "Percent 65 and Older",
                                                                    "Percent non-English Proficient",
                                                                    "Percent Hispanic",
                                                                    "Percent African American",
                                                                    "Avg. Household Income",
                                                                    "Avg. Mentally Unhealthy Days per Month",
                                                                    "Total Population by County",
                                                                    "Percent Rural"), 
                                               column.labels = c("Simple Linear", "Linear with Hospital Controls", "Linear with Hospital and County Controls", "Hospital Fixed Effects", "Hospital and Time Fixed Effects"),
                                               omit.stat = c("f","ser","rsq"),
                                               se_type = "HC1",
                                               dep.var.labels = "Observed vs. Expected PPCs",
          notes = "No Weighting Required or Used.",
          add.lines = list(c('Fixed Effects', 'No',
                             'No', 'No', 'Yes', 'Yes')),
          out = "KNN_Imputed_Regressions_April.htm")
```

Maybe do an f test between medicaid and charity care costs. 

direct patient care labor hours f test with beds?

inpatient occupancy

## Dealing with Observation Irregularities 

```{r}

imputed <- numeric_data %>% filter(!hospital_name.y == "BURDETT CARE CENTER", 
                                   !hospital_name.y == "ROCKEFFELLER UNIVERSITY HOSPITAL",
                                   !hospital_name.y == "BURDETT CARE CENTER INC.",
                                   !hospital_name.y == "BRUNSWICK HOSPITAL CENTER")
```
Rockerfeller and burdett are nas for all 3 controls. 

net charity care is missing for Memorial Hospital for Cancer and All and Roswell Park Cancer Institute. Missing Soldiers and Sailors Memorial Hospital early values net charity. 

Look at recipes package. Prep and bake recipe. step impute functions. 


Remove Rockeffeller University Hospital and Burdett Care Center because they have NAs for all three of my controls. 
Remove Brunswick Hospital Center because two controls have NAs. 
Consider removing "MEMORIAL HOSPITAL FOR CANCER AND ALL" as net charity care no observations. 


## Naive linear regression.

```{r}

initial_reg <- lm(difference_in_discharges ~ hospital_ownership_type, data = imputed)

linear_summary <- summary(initial_reg)

linear_glance <- glance(initial_reg)

linear_tidy <- tidy(initial_reg)

linear_coef <- coeftest(initial_reg, vcov = vcovHC, type = "HC1")

table_initial_reg <- initial_reg %>% stargazer(type = "text",
                                               title = "Simple Linear Regression Results",
                                               report = "vcs*",
                                               single.row = TRUE,
                                               digits = 3,
                                               omit.stat = c("f","ser","rsq"),
                                               se_type = "HC1")

#linear_table <- linear_tidy %>% gt()

#linear_table_glance <- linear_glance %>% gt()

#linear_viz <- ggplot(data = numeric_data, mapping = aes(x = year, y = ppc_version)) + geom_point()

#linear_viz + plot_layout(linear_table + linear_table_glance) 
```

## Linear regression with controls.

```{r}

linear_control <- lm(difference_in_discharges ~ hospital_ownership_type + bed_size + net_patient_revenue_hundred_thousand + net_charity_care_cost_ten_thousand, data = numeric_data)  

summary(linear_control) 

glance(linear_control)

View(tidy(linear_control))

coeftest(linear_control, vcov = vcovHC, type = "HC1")

table_control_linear_reg <- linear_control %>% stargazer(type = "text",
                                               title = "Linear Regression with Controls Results",
                                               report = "vcs*",
                                               single.row = TRUE,
                                               digits = 3,
                                               omit.stat = c("f","ser","rsq"),
                                               se_type = "HC1")


```

## Hospital Fixed Effects

```{r}

#hospital_fixed_effects <- lm(difference_in_discharges ~ hospital_ownership_type + hospital_name.y + bed_size + net_patient_revenue_hundred_thousand + net_charity_care_cost_ten_thousand - 1,data = numeric_data)  

hospital_fixed_effects_plm <- plm(difference_in_discharges ~ hospital_ownership_type + hospital_name.y + bed_size + net_patient_revenue_hundred_thousand + net_charity_care_cost_ten_thousand,
    data = numeric_data,
    index = c("hospital_name.y", "year"),
    model = "within",
    effect = "individual")

summary(hospital_fixed_effects_plm) 

glance(hospital_fixed_effects_plm)
tidy(hospital_fixed_effects_plm)

coeftest(hospital_fixed_effects_plm, vcov = vcovHC, type = "HC1")

table_hospital_effects <- hospital_fixed_effects_plm %>% stargazer(type = "text",
                                               title = "Hospital Fixed Effect Regression Results",
                                               report = "vcs*",
                                               single.row = TRUE,
                                               digits = 3,
                                               omit.stat = c("f","ser","rsq"),
                                               se_type = "HC1")


#numeric_data %>% count(hospital_name.y) %>% arrange(by = n) 

#ask an economist. Could do entity wise demeaning. Do I have too many fixed effects for my dataset size?
```

## Time Fixed Effects

```{r}
#time_fixed_effects <- lm(difference_in_discharges ~ hospital_ownership_type + year + bed_size + net_patient_revenue_hundred_thousand + net_charity_care_cost_ten_thousand - 1,data = numeric_data)  

time_fixed_effects_plm <- plm(difference_in_discharges ~ hospital_ownership_type + year + hospital_name.y + bed_size + net_patient_revenue_hundred_thousand + net_charity_care_cost_ten_thousand,
                data = numeric_data,
    index = c("hospital_name.y", "year"),
    model = "within",
    effect = "twoways")

summary(time_fixed_effects_plm) 

glance(time_fixed_effects_plm)

coeftest(time_fixed_effects_plm, vcov = vcovHC, type = "HC1")

table_time_effects <- time_fixed_effects_plm %>% stargazer(type = "text",
                                               title = "Simple Linear Regression Results",
                                               report = "vcs*",
                                               single.row = TRUE,
                                               digits = 3,
                                               omit.stat = c("f","ser","rsq"),
                                               se_type = "HC1")

```

## Simple two-way fixed effects regression.

```{r}

fixed_effects <- plm(difference_in_discharges ~ hospital_ownership_type,
                     data = numeric_data,
                     index = c("year","hospital_name.y"),
                     model = "within",
                     effect = "twoways")

summary(fixed_effects)
glance(fixed_effects)
tidy(fixed_effects)
coeftest(fixed_effects, vcov = vcovHC, type = "HC1")

simple_twoway_fixed_effects <- fixed_effects %>% stargazer(type = "text",
                                               title = "Simple Linear Regression Results",
                                               report = "vcs*",
                                               single.row = TRUE,
                                               digits = 3,
                                               omit.stat = c("f","ser","rsq"),
                                               se_type = "HC1")

```

## Add control variables to fixed effects regression.

```{r}
Controls_added <- plm(difference_in_discharges ~ hospital_ownership_type + bed_size+ net_patient_revenue_hundred_thousand + net_charity_care_cost_ten_thousand,
                     data = numeric_data,
                     index = c("year","hospital_name.y"),
                     model = "within",
                     effect = "twoways")

summary(Controls_added)
glance(Controls_added)
tidy(Controls_added)

coeftest(Controls_added, vcov = vcovHC, type = "HC1")

fixed_effects_control <- Controls_added %>%  stargazer(type = "text",
                                               title = "Simple Linear Regression Results",
                                               report = "vcs*",
                                               single.row = TRUE,
                                               digits = 3,
                                               omit.stat = c("f","ser","rsq"),
                                               se_type = "HC1")
```

## Stargazer Prep
```{r}
m1 <- initial_reg
m2 <- linear_control
m3 <- hospital_fixed_effects_plm
m4 <- time_fixed_effects_plm
```


## Stargazer Combined Table

```{r}

Complete_init_table <- stargazer(m1,
          m2, 
          m3, 
          m4,
          type = "text",
          title = "All Four Regression Models", 
                                               report = "vcs*",
                                               single.row = TRUE,
                                               digits = 3,
                                               covariate.labels = c("Governmental Hospitals", "Non-Profit Hospitals", "Number of Beds", "Net Patient Revenue (Hundreds of Thousands of Dollars)", "Net Charity Care Costs (Tens of Thousands of Dollars"),
                                               column.labels = c("Simple Linear", "Linear with Controls", "Hospital Fixed Effects", "Two Way Fixed Effects"),
                                               omit.stat = c("f","ser","rsq"),
                                               se_type = "HC1",
                                               dep.var.labels = "Observed vs. Expected PPCs")

#summary(Compare_lm_table)

Compare_single_effects_table <- stargazer(hospital_fixed_effects_plm,
          time_fixed_effects_plm,
          type = "html",
          title = "Hospital Fixed Effects vs. Year Fixed Effects", 
          report = "vcs*p",
          single.row = TRUE,
          ci = TRUE, 
          ci.level = 0.95,
          mean.sd = TRUE, 
          p.auto = TRUE, 
          digits = 3, 
          se_type = "HC1",
          out = "Compare_single_effects_table.htm")

#summary(Compare_single_effects_table)

Compare_twoway_effects_table <- stargazer(fixed_effects,
          Controls_added,
          type = "html",
          title = "Simple Two Way Fixed Effects vs. Two Way Fixed Effects with Controls", 
          report = "vcs*p",
          single.row = TRUE,
          ci = TRUE, 
          ci.level = 0.95,
          mean.sd = TRUE, 
          p.auto = TRUE, 
          digits = 3, 
          se_type = "HC1",
          out = "Compare_twoway_effects_table.htm")

#summary(Compare_twoway_effects_table)


```

## Just looking at a scatterplot

```{r}
ggplot(data = Fully_combined_dataset,
       mapping = aes(x = hospital_ownership_type, y = difference_in_discharges, fill = year)) + geom_point(alpha = .3) + theme_minimal()

```

## Density plot

```{r}
ggplot(data = Fully_combined_dataset,
       mapping = aes(x = difference_in_discharges,
                     group = hospital_ownership_type, 
                     fill = hospital_ownership_type)) + 
  geom_density(alpha =0.6) + 
  labs(title = "Distribution of PPCs in Terms of Hospital Ownership") +
  xlab("Expected vs. Observed PPCs") +
  ylab("Density") +
  guides(fill = guide_legend(title = "Hospital Ownership Type")) +
  theme_minimal()
```


## Correlogram

```{r}
correlogram <- removed_omits %>% 
  mutate(`Smokers`= percent_smokers_imputed) %>%
  mutate(`Child Poverty` = percent_children_in_poverty_imputed) %>%
  mutate(`Unemployed` = percent_unemployed_imputed) %>%
  mutate(`Excess Drinkers` = percent_excessive_drinking_imputed) %>%
  mutate(`Obese` = percent_obese_imputed) %>%
  mutate(`Uninsured` = percent_uninsured_imputed) %>%
  mutate(`Female` = percent_female_imputed) %>%
  mutate(`Over 65` = percent_65_and_over_imputed) %>%
  mutate(`Non-English Speaker` = percent_not_proficient_in_english_imputed) %>%
  mutate(`Hispanic` = percent_hispanic_imputed) %>%
  mutate(`Black` = percent_african_american_imputed) %>%
  mutate(`Rural` = percent_rural_imputed) %>%
  mutate(`net revenue` = net_patient_revenue_hundred_thousand_imputed) %>%
  mutate(`Charity Care Cost` = net_charity_care_cost_ten_thousand_imputed) %>%
  mutate(population = population_y_imputed) %>%
  mutate(`Beds Occupied` = bed_size_imputed)  %>%
  mutate(household_income = household_income_imputed) %>%
  mutate(`Observed vs. Expected PPCs` = difference_in_discharges_imputed) %>%
  select(-year,
         -hospital_name.y,
         -hospital_ownership_type,
         -percent_smokers_imputed,
         -percent_children_in_poverty_imputed,
         -percent_unemployed_imputed,
         -percent_excessive_drinking_imputed,
         -percent_obese_imputed,
         -percent_uninsured_imputed,
         -percent_female_imputed,
         -percent_65_and_over_imputed,
         -percent_not_proficient_in_english_imputed,
         -percent_hispanic_imputed,
         -percent_african_american_imputed,
         -percent_rural_imputed,
         -net_charity_care_cost_ten_thousand_imputed,
         -net_patient_revenue_hundred_thousand_imputed,
         -population_y_imputed,
         -bed_size_imputed,
         -difference_in_discharges_imputed,
         -household_income_imputed) 

ggcorr(correlogram,
       label = TRUE,
       layout.exp = 3)




("Non-Profit Hospitals", "Number of Beds",
                                                                    "Net Patient Revenue (Hundreds of Thousands of Dollars)",
                                                                    "Net Charity Care Costs (Tens of Thousands of Dollars",
                                                                    "Medicare Payer Mix",
                                                                    "Medicaid Payer Mix", 
                                                                    "Percent of Beds Occupied",
                                                                    "Total Number of Direct Care Hours per Hospital",
                                                                    "Percent of Children in Poverty",
                                                                    "Percent Unemployed",
                                                                    "Percent Smokers",
                                                                    "Percent Excessive Drinkers",
                                                                    
                                                                    "Percent Obese",
                                                                    "Percent Uninsured",
                                                                    "Percent Female",
                                                                    "Percent 65 and Older",
                                                                    "Percent non-English Proficient",
                                                                    "Percent Hispanic",
                                                                    "Percent African American",
                                                                    "Avg. Household Income",
                                                                    "Avg. Mentally Unhealthy Days",
                                                                    "Total Population",
                                                                    "Percent Rural")


```



-------------------
From Williams

\#' Create a regression table with clustered standard errors and drop the\
\#' coefficients from fixed effects.\
\#'\
\#' \@param model1\
\#' \@param model2\
\#' \@param model3\
\#' \@param model4\
\#'\
\#' \@return\
\#'\
create_model_table \<- function(model1, model2, model3, model4) {\
 \
  drop_fe \<- function(x, fe = "state\|cz2000") {\
   \
    x\[!grepl(fe, names(x))\]\
   \
  }\
 \
  se \<- starprep(model1,\
                 model2,\
                 model3,\
                 model4,\
                 se_type = "HC1") %\>%\
    map(drop_fe)\
 \
  model1\$coefficients \<- drop_fe(model1\$coefficients)\
  model2\$coefficients \<- drop_fe(model2\$coefficients)\
  model3\$coefficients \<- drop_fe(model3\$coefficients)\
  model4\$coefficients \<- drop_fe(model4\$coefficients)\
 \
  stargazer(model1,\
            model2,\
            model3,\
            model4,\
            se = se,\
            type = "html",\
            digits = 5)\
}

------------------------------------------------------------------------

Direct patient care? -\>

Along causal chain?

Groft page 39 or 43. Mediator check on Direct Patient Care.

Medicaid for patient income proxy. F test between them a charity care.

I do have zip code. Could try to match to local info online. hospital referral region (HRR) data? Maybe check Dartmouth Atlas.

------------------------------------------------------------------------

library(tidyverse)\
library(gt)\
library(patchwork)\
library(broom)\
\
model \<- lm(dist \~ speed, data = cars)\
\
\
table_coef \<- model \|\>\
tidy() \|\>\
gt()\
\
table_model \<- model \|\>\
  glance() \|\>\
  gt()\
\
viz \<- ggplot(data = cars, aes(speed, dist)) +\
  geom_point()

------------------------------------------------------------------------

<https://gt.rstudio.com/articles/case-study-gtcars.html>\
<https://gt.rstudio.com/articles/case-study-clinical-tables.html>

------------------------------------------------------------------------

for hw testthat testcheck() add r script

```{r}
lark <- lm(difference_in_discharges ~ hospital_ownership_type + bed_size + net_patient_revenue_hundred_thousand + net_charity_care_cost_ten_thousand + hos_majteach + hos_highuc + hos_res,
   data = numeric_data) 

glance(lark)

tidy(lark)

summary(lark)
```

Use case when to make urban vs rural divide.
